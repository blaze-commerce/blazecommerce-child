name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  php-quality:
    runs-on: ubuntu-latest
    name: PHP Code Quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl
          tools: composer, phpcs, phpcbf

      - name: Install PHP dependencies
        run: |
          # Install WordPress Coding Standards
          composer global require "squizlabs/php_codesniffer=*"
          composer global require "wp-coding-standards/wpcs"
          composer global require "phpcompatibility/phpcompatibility-wp"
          
          # Set installed paths
          phpcs --config-set installed_paths ~/.composer/vendor/wp-coding-standards/wpcs,~/.composer/vendor/phpcompatibility/phpcompatibility-wp

      - name: Run PHP CodeSniffer
        run: |
          # Check WordPress coding standards
          phpcs --standard=WordPress \
            --extensions=php \
            --ignore=*/vendor/*,*/node_modules/*,*/class-tgm-plugin-activation.php \
            --report=summary \
            --colors \
            .

      - name: Run PHP Compatibility Check
        run: |
          # Check PHP 8.0+ compatibility
          phpcs --standard=PHPCompatibilityWP \
            --extensions=php \
            --ignore=*/vendor/*,*/node_modules/*,*/class-tgm-plugin-activation.php \
            --runtime-set testVersion 8.0- \
            --report=summary \
            --colors \
            .

  css-quality:
    runs-on: ubuntu-latest
    name: CSS Code Quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run Stylelint
        run: |
          # Lint CSS files
          npx stylelint "**/*.css" \
            --ignore-path .gitignore \
            --formatter verbose

  theme-validation:
    runs-on: ubuntu-latest
    name: WordPress Theme Validation
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Validate theme structure
        run: npm run validate

      - name: Check for WordPress functions
        run: |
          echo "Checking for deprecated WordPress functions..."
          
          # Check for deprecated functions
          DEPRECATED_FUNCTIONS=(
            "mysql_query"
            "mysql_connect"
            "ereg"
            "split"
            "create_function"
          )
          
          for func in "${DEPRECATED_FUNCTIONS[@]}"; do
            if grep -r "$func" --include="*.php" . --exclude-dir=vendor --exclude-dir=node_modules; then
              echo "❌ Found deprecated function: $func"
              exit 1
            fi
          done
          
          echo "✅ No deprecated functions found"

      - name: Security scan
        run: |
          echo "Running basic security checks..."
          
          # Check for potential security issues
          SECURITY_PATTERNS=(
            "eval\("
            "base64_decode"
            "file_get_contents.*http"
            "curl_exec"
            "shell_exec"
            "system\("
            "exec\("
          )
          
          for pattern in "${SECURITY_PATTERNS[@]}"; do
            if grep -rE "$pattern" --include="*.php" . --exclude-dir=vendor --exclude-dir=node_modules; then
              echo "⚠️  Potential security concern found: $pattern"
              echo "Please review the usage manually"
            fi
          done
          
          echo "✅ Basic security scan completed"
